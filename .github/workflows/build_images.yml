name: Build Images
on:
  push:
    branches:
      - dev
      - main
      - ci-*

concurrency:
  group: build-images-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  id-token: write

env:
  ECS_REPO: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

jobs:
  build_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag the base image
        id: base
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECS_REPO }}/ndif_base
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          target: ndif_base
          outputs: type=registry,type=docker
          tags: ${{ steps.base.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ndif_base:cache
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ndif_base:cache,mode=max

      - name: Tag the API image
        id: api
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECS_REPO }}/api
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push API service image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          build-args: |
            NAME=api
          tags: ${{ steps.api.outputs.tags }}
          cache-from: |
            type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ndif_base:cache
            type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/api:cache
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/api:cache,mode=max

      - name: Tag the Ray image
        id: ray
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECS_REPO }}/ray
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Ray service image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          build-args: |
            NAME=ray
          tags: ${{ steps.ray.outputs.tags }}
          cache-from: |
            type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ndif_base:cache
            type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ray:cache
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dev/ray:cache,mode=max
