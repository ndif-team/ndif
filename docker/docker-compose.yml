services:
  message_broker:
    image: redis:${REDIS_VERSION}
    ports:
      - ${DEV_BROKER_PORT}:${BROKER_INTERNAL_PORT}

  minio:
    image: minio/minio:${MINIO_VERSION}
    command: server /data
    ports:
      - ${DEV_MINIO_PORT}:${MINIO_INTERNAL_PORT}

  ray:
    image: ray:${RAY_VERSION}
    shm_size: '15gb'
    volumes:
      - ~/.cache/huggingface/:/root/.cache/huggingface
      - ray-data:/tmp/ray/

    ports:
      - ${DEV_RAY_HEAD_PORT}:${RAY_HEAD_INTERNAL_PORT}
      - ${DEV_RAY_CLIENT_PORT}:${RAY_CLIENT_INTERNAL_PORT}
      - ${DEV_RAY_DASHBOARD_PORT}:${RAY_DASHBOARD_INTERNAL_PORT}
      - ${DEV_RAY_SERVE_PORT}:${RAY_SERVE_INTERNAL_PORT}
    deploy:
      replicas: 1
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${N_DEVICES}
              capabilities: [ gpu ]
    environment:
      - LOKI_URL=http://${HOST_IP}:${DEV_LOKI_PORT}/loki/api/v1/push
      - OBJECT_STORE_URL=${HOST_IP}:${DEV_MINIO_PORT}
      - API_URL=http://${HOST_IP}:${DEV_API_PORT}
      - INFLUXDB_ADDRESS=http://${HOST_IP}:${DEV_INFLUXDB_PORT}
      - INFLUXDB_ADMIN_TOKEN=${SECRET_INFLUXDB_ADMIN_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}

      - SCHEDULING_GOOGLE_CALENDAR_ID=a7cbc58fdb0ddd93a260cd35f34492e8a38c360c44b72c8539e43aa99aeca436@group.calendar.google.com
      - SCHEDULING_GOOGLE_CREDS_PATH=/src/ray/deployments/controller/gcal/creds.json

    env_file:
      - .env

  api:
    image: api:${API_VERSION}
    ports:
      - ${DEV_API_PORT}:${API_INTERNAL_PORT}
    environment:
      OBJECT_STORE_URL: ${HOST_IP}:${DEV_MINIO_PORT}
      BROKER_URL: ${BROKER_PROTOCOL}@${HOST_IP}:${DEV_BROKER_PORT}/
      WORKERS: ${API_WORKERS}
      RAY_ADDRESS: ray://${HOST_IP}:${DEV_RAY_CLIENT_PORT}
      LOKI_URL: http://${HOST_IP}:${DEV_LOKI_PORT}/loki/api/v1/push
      RAY_SERVE_QUEUE_LENGTH_RESPONSE_DEADLINE_S: 10
      INFLUXDB_ADDRESS: http://${HOST_IP}:${DEV_INFLUXDB_PORT}
      INFLUXDB_ADMIN_TOKEN: ${SECRET_INFLUXDB_ADMIN_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      QUEUE_URL: ${HOST_IP}:${DEV_QUEUE_PORT}

    
  queue:
    image: queue:${QUEUE_VERSION}
    ports:
      - ${DEV_QUEUE_PORT}:${QUEUE_INTERNAL_PORT}
    environment:
      OBJECT_STORE_URL: ${HOST_IP}:${DEV_MINIO_PORT}
      BROKER_URL: ${BROKER_PROTOCOL}@${HOST_IP}:${DEV_BROKER_PORT}/
      RAY_ADDRESS: ray://${HOST_IP}:${DEV_RAY_CLIENT_PORT}
      API_URL: http://${HOST_IP}:${DEV_API_PORT}
      LOKI_URL: http://${HOST_IP}:${DEV_LOKI_PORT}/loki/api/v1/push
      RAY_SERVE_QUEUE_LENGTH_RESPONSE_DEADLINE_S: 10
      INFLUXDB_ADDRESS: http://${HOST_IP}:${DEV_INFLUXDB_PORT}
      INFLUXDB_ADMIN_TOKEN: ${SECRET_INFLUXDB_ADMIN_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      API_INTERNAL_PORT: ${API_INTERNAL_PORT}


  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    network_mode: "host"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver'
    volumes:
      - prometheus-data:/prometheus
      - ../telemetry/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ray-data:/tmp/ray
    depends_on:
      - api
      - ray

  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    network_mode: "host"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${SECRET_INFLUXDB_ADMIN_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${SECRET_INFLUXDB_ADMIN_PASSWORD}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${SECRET_INFLUXDB_ADMIN_TOKEN}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
    volumes:
      - influxdb2-data:/var/lib/influxdb2
      - influxdb2-config:/etc/influxdb2

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    network_mode: "host"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - INFLUXDB_ADMIN_TOKEN=${SECRET_INFLUXDB_ADMIN_TOKEN}
    volumes:
      - grafana-storage:/var/lib/grafana
      - ../telemetry/grafana/provisioning:/etc/grafana/provisioning
      - ../telemetry/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - influxdb

  loki:
    image: grafana/loki:${LOKI_VERSION}
    network_mode: "host"
    volumes:
      - loki-data:/loki

volumes:
  grafana-storage:
  loki-data:
  prometheus-data:
  ray-data:
  influxdb2-data:
  influxdb2-config: